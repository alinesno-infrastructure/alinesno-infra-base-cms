# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: Portal Maven Package

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      # 版本管理
      PROJECT_NAME: 'alinesno-infra-portal'
      PRO_VERSION: '1.0.0-SNAPSHOT'
      CURRENT_PROFIRE: 'dev'
      BUILD_NUMBER: ${{ github.run_number }}

      # 容器镜像
      ALIYUN_CR_REGISTORY: 'registry.cn-shenzhen.aliyuncs.com'
      ALIYUN_CR_NAMESPACE: 'alinesno-infra-platform'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Maven Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build and Deploy to Nexus
        run: |
          cd ${{ env.PROJECT_NAME }}
          mvn clean package

      - name: Login to Aliyun Container Registry (ACR)
        uses: aliyun/acr-login@v1
        with:
          login-server: ${{ env.ALIYUN_CR_REGISTORY }}
          region-id: cn-shenzhen  # 3
          username: "${{ secrets.ALIYUN_CR_USERNAME }}"
          password: "${{ secrets.ALIYUN_CR_PASSWORD }}"

      - name: Build Docker image
        run: |
          cd ${{ env.PROJECT_NAME }}
          cp -r dist ./docker/
          docker build -t ${{ env.ALIYUN_CR_REGISTORY }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PROJECT_NAME }}:${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }} ./docker
          docker push ${{ env.ALIYUN_CR_REGISTORY }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PROJECT_NAME }}:${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }}

      # - name: local remote scp
        # uses: cross-the-world/scp-pipeline@master
        # with:
          # host: ${{ secrets.SERVER_BATA_HOST_01 }}
          # port: ${{ secrets.SERVER_BATA_PORT_01 }}
          # user: ${{ secrets.SERVER_BATA_USER_01 }}
          # pass: ${{ secrets.SERVER_BATA_KEY_01 }}
          # local: "./deploy/*"
          # remote: /home/github-action/${{ env.PROJECT_NAME }}

      # - name: SSH Pipelines
        # uses: cross-the-world/ssh-pipeline@master
        # env:
          # WELCOME: "ssh pipeline"
        # with:
          # host: ${{ secrets.SERVER_BATA_HOST_01 }}
          # port: ${{ secrets.SERVER_BATA_PORT_01 }}
          # user: ${{ secrets.SERVER_BATA_USER_01 }}
          # pass: ${{ secrets.SERVER_BATA_KEY_01 }}
          # connect_timeout: 30s
          # script: |
            # export PROJECT_NAME=${{ env.PROJECT_NAME }}
            # export VERSION=${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }}

            # export ALIYUN_CR_REGISTORY=${{ env.ALIYUN_CR_REGISTORY }}
            # export ALIYUN_CR_NAMESPACE=${{ env.ALIYUN_CR_NAMESPACE }}
            # export NAMESPACE=${{ secrets.K8S_NAMESPACE }}

            # export INFRA_DEV_DOMAIN=${{ secrets.INFRA_BETA_BASE_DOMAIN }}

            # envsubst < /home/github-action/${{ env.PROJECT_NAME }}/kubernetes-portal-${{ env.CURRENT_PROFIRE }}.yml | kubectl apply -f -
